pipeline {
    agent {
        label 'AGENT_1'
    }
    environment {
        appVersion = ''
        ACC_ID = "557690617909"
        REGION = "us-east-1"
        PROJECT = "roboshop"
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    stages{
        stage('init'){
            steps{
                script{
                    withAWS(credentials: 'aws-creds', region: 'us-east-1'){
                        sh """
                            cd 10-sg
                            terraform init -reconfigure
                        """
                    }
                }
            }
        }
        stage('plan'){
            steps{
                script{
                    withAWS(credentials: 'aws-creds', region: 'us-east-1'){
                        sh """
                            cd 10-sg
                            terraform plan
                        """
                    }
                }
            }
        }
        stage('apply'){
            steps{
                script{
                    withAWS(credentials: 'aws-creds', region: 'us-east-1'){
                        sh """
                            cd 10-sg
                            terraform apply -auto-approve
                        """
                    }
                }
            }
        }
        // Downstream Job and parallely trigerring Bastion,EKS,ACM
        stage('Bastion ACM EKS') {
            parallel {
                stage('Trigger Bastion'){
                    steps{
                        script{
                            build job: '20-bastion',
                            propagate: false,
                            wait: false
                        }
                    }
                }
                stage('Trigger EKS'){
                    steps{
                        script {
                            build job: '80-eks',
                            propagate: false,
                            wait: false
                        }
                    }
                }
                stage('Trigger ACM'){
                    steps{
                        script {
                            build job: '60-acm',
                            propagate: false,
                            wait: false
                        }
                    }
                }
            }
        }
        // triggering frontend-alb once above steps are done
        stage('frontend-alb'){
            steps{
                script{
                    build job: '70-frontend-alb',
                    propagate: false,
                    wait: false
                }
            }
        }
    }
    post{
        always {
            echo 'I will always say Hello again!'
            deleteDir()
        }
        success {
            echo 'Hello Success'
        }
        failure { 
            echo 'Hello Failure'
        }
    }
}